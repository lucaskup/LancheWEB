-- MySQL Script generated by MySQL Workbench
-- 05/24/15 00:18:54
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema lanche
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema lanche
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `lanche` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `lanche` ;

-- -----------------------------------------------------
-- Table `lanche`.`Lanche`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanche`.`Lanche` (
  `idLanche` INT NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NOT NULL,
  `preco` DECIMAL(10,2) NOT NULL,
  `dtCadastro` DATETIME NULL,
  `dtModificacao` DATETIME NULL,
  `ativo` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`idLanche`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lanche`.`Opcionais`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanche`.`Opcionais` (
  `idOpcionais` INT NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NOT NULL,
  `precoAdicional` DECIMAL(10,2) NOT NULL DEFAULT 0,
  `permiteMaisQueUm` TINYINT(1) NULL,
  `dtCadastro` DATETIME NULL,
  `dtModificacao` DATETIME NULL,
  PRIMARY KEY (`idOpcionais`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lanche`.`LancheXOpcionais`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanche`.`LancheXOpcionais` (
  `fkLanche` INT NOT NULL,
  `fkOpcionais` INT NOT NULL,
  `dtCadastro` DATETIME NULL,
  INDEX `fk_Lanche_has_Opcionais_Opcionais1_idx` (`fkOpcionais` ASC),
  INDEX `fk_Lanche_has_Opcionais_Lanche_idx` (`fkLanche` ASC),
  PRIMARY KEY (`fkLanche`, `fkOpcionais`),
  CONSTRAINT `fk_Lanche_has_Opcionais_Lanche`
    FOREIGN KEY (`fkLanche`)
    REFERENCES `lanche`.`Lanche` (`idLanche`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Lanche_has_Opcionais_Opcionais1`
    FOREIGN KEY (`fkOpcionais`)
    REFERENCES `lanche`.`Opcionais` (`idOpcionais`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lanche`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanche`.`Usuario` (
  `idUsuario` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `sobrenome` VARCHAR(100) NOT NULL,
  `dataNascimento` DATE NULL,
  `turma` VARCHAR(45) NULL,
  `funcao` INT NOT NULL DEFAULT 1 COMMENT '1 Aluno\n2 Professor\n3 Atendente',
  `password` VARCHAR(200) NOT NULL,
  `ativo` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`idUsuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lanche`.`Pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanche`.`Pedido` (
  `idPedido` INT NOT NULL AUTO_INCREMENT,
  `fkUsuario` INT NULL,
  `dtCriacao` DATETIME NULL,
  `dtModificacao` DATETIME NULL,
  `status` INT NULL DEFAULT 0,
  PRIMARY KEY (`idPedido`),
  INDEX `fk_usuario_idx` (`fkUsuario` ASC),
  CONSTRAINT `fk_usuario`
    FOREIGN KEY (`fkUsuario`)
    REFERENCES `lanche`.`Usuario` (`idUsuario`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lanche`.`ItemPedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanche`.`ItemPedido` (
  `idItemPedido` INT NOT NULL AUTO_INCREMENT,
  `numItem` INT NOT NULL,
  `fkLanche` INT NOT NULL,
  `fkPedido` INT NOT NULL,
  `quantidade` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`idItemPedido`),
  INDEX `fk_Lanche_has_Pedido_Pedido1_idx` (`fkPedido` ASC),
  INDEX `fk_Lanche_has_Pedido_Lanche1_idx` (`fkLanche` ASC),
  CONSTRAINT `fk_Lanche_has_Pedido_Lanche1`
    FOREIGN KEY (`fkLanche`)
    REFERENCES `lanche`.`Lanche` (`idLanche`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Lanche_has_Pedido_Pedido1`
    FOREIGN KEY (`fkPedido`)
    REFERENCES `lanche`.`Pedido` (`idPedido`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = '					';


-- -----------------------------------------------------
-- Table `lanche`.`OpcionaisItemPedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanche`.`OpcionaisItemPedido` (
  `fkItemPedido` INT NOT NULL,
  `fkOpcionais` INT NOT NULL,
  `quantidade` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`fkItemPedido`, `fkOpcionais`),
  INDEX `fk_ItemPedido_has_Opcionais_Opcionais1_idx` (`fkOpcionais` ASC),
  INDEX `fk_ItemPedido_has_Opcionais_ItemPedido1_idx` (`fkItemPedido` ASC),
  CONSTRAINT `fk_ItemPedido_has_Opcionais_ItemPedido1`
    FOREIGN KEY (`fkItemPedido`)
    REFERENCES `lanche`.`ItemPedido` (`idItemPedido`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ItemPedido_has_Opcionais_Opcionais1`
    FOREIGN KEY (`fkOpcionais`)
    REFERENCES `lanche`.`Opcionais` (`idOpcionais`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lanche`.`HistoricoPrecos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanche`.`HistoricoPrecos` (
  `idHistoricoPrecos` INT NOT NULL AUTO_INCREMENT,
  `fkLanche` INT NOT NULL,
  `dtHistorico` DATETIME NULL,
  `precoAnterior` DECIMAL(10,2) NULL,
  PRIMARY KEY (`idHistoricoPrecos`),
  INDEX `fk_HistoricoPrecos_Lanche1_idx` (`fkLanche` ASC),
  CONSTRAINT `fk_HistoricoPrecos_Lanche1`
    FOREIGN KEY (`fkLanche`)
    REFERENCES `lanche`.`Lanche` (`idLanche`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
